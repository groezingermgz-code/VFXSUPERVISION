name: Release on Tag

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v0.4.2)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  publish:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tag commit (push)
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Checkout selected tag (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ inputs.tag }}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Package dist
        shell: bash
        run: |
          if [ -d "dist" ]; then
            zip -r dist.zip dist
          else
            echo "No dist dir; skipping zip"
          fi

      - name: Package server
        shell: bash
        run: |
          if [ -d "server" ]; then
            zip -r server.zip server -x 'server/db.json' '*.log' 'server/*.log' 'server/*/*.log' 'server/*/*/*.log'
          else
            echo "No server dir; skipping zip"
          fi

      - name: Package Python bridge
        shell: bash
        run: |
          if [ -d "bridge/insta360-python" ]; then
            zip -r insta360-python.zip bridge/insta360-python -x '*/__pycache__/*' '*.pyc' '*/.venv/*' '*/.git/*'
          else
            echo "No python bridge dir; skipping zip"
          fi

      - name: Setup Java (for Android)
        if: ${{ hashFiles('bridge/insta360-android/build.gradle') != '' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        if: ${{ hashFiles('bridge/insta360-android/build.gradle') != '' }}
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          components: platform-tools

      - name: Build Android APK (wrapper vorhanden)
        if: ${{ hashFiles('bridge/insta360-android/gradlew') != '' }}
        working-directory: bridge/insta360-android
        run: ./gradlew clean :app:assembleRelease

      - name: Build Android APK (Gradle-Fallback ohne Wrapper)
        if: ${{ hashFiles('bridge/insta360-android/gradlew') == '' && hashFiles('bridge/insta360-android/build.gradle') != '' }}
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.9
          build-root-directory: bridge/insta360-android
          arguments: clean :app:assembleRelease

      - name: Collect Android APK
        shell: bash
        run: |
          APK=$(find bridge/insta360-android/app/build/outputs/apk -type f -name '*.apk' | head -n 1 || true)
          if [ -n "$APK" ]; then
            cp "$APK" insta360-android.apk
            echo "Built APK: $APK -> insta360-android.apk"
          else
            echo "No APK found; skipping"
          fi

      - name: Prepare release notes
        id: notes
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ inputs.tag }}"
          else
            TAG="${{ github.ref_name }}"
          fi
          NOTES_FILE="docs/releases/${TAG}.md"
          if [ -f "$NOTES_FILE" ]; then
            echo "notes_path=$NOTES_FILE" >> $GITHUB_OUTPUT
          else
            git fetch --depth=1 origin main || true
            if git show origin/main:${NOTES_FILE} > release-notes.md 2>/dev/null; then
              echo "notes_path=release-notes.md" >> $GITHUB_OUTPUT
            elif git show origin/main:CHANGELOG.md > release-notes.md 2>/dev/null; then
              echo "notes_path=release-notes.md" >> $GITHUB_OUTPUT
            else
              echo "notes_path=" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Check existing release
        id: existing
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ inputs.tag }}"
          else
            TAG="${{ github.ref_name }}"
          fi
          API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/$TAG"
          HTTP=$(curl -sS -H "Accept: application/vnd.github+json" -H "Authorization: Bearer $GITHUB_TOKEN" -w "%{http_code}" -o release.json "$API_URL" || echo "000")
          if [ "$HTTP" = "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            if grep -q '"name"[[:space:]]*:[[:space:]]*"dist.zip"' release.json; then echo "has_dist=true" >> $GITHUB_OUTPUT; else echo "has_dist=false" >> $GITHUB_OUTPUT; fi
            if grep -q '"name"[[:space:]]*:[[:space:]]*"server.zip"' release.json; then echo "has_server=true" >> $GITHUB_OUTPUT; else echo "has_server=false" >> $GITHUB_OUTPUT; fi
            if grep -q '"name"[[:space:]]*:[[:space:]]*"insta360-python.zip"' release.json; then echo "has_py=true" >> $GITHUB_OUTPUT; else echo "has_py=false" >> $GITHUB_OUTPUT; fi
            if grep -q '"name"[[:space:]]*:[[:space:]]*"insta360-android.apk"' release.json; then echo "has_apk=true" >> $GITHUB_OUTPUT; else echo "has_apk=false" >> $GITHUB_OUTPUT; fi
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "has_dist=false" >> $GITHUB_OUTPUT
            echo "has_server=false" >> $GITHUB_OUTPUT
            echo "has_py=false" >> $GITHUB_OUTPUT
            echo "has_apk=false" >> $GITHUB_OUTPUT
          fi

      - name: Collect artifacts
        id: artifacts
        shell: bash
        run: |
          FILES=""
          add_file() { [ -f "$1" ] && FILES="$FILES\n$1"; }
          if [ "${{ steps.existing.outputs.has_dist }}" != "true" ]; then add_file dist.zip; fi
          if [ "${{ steps.existing.outputs.has_server }}" != "true" ]; then add_file server.zip; fi
          if [ "${{ steps.existing.outputs.has_py }}" != "true" ]; then add_file insta360-python.zip; fi
          if [ "${{ steps.existing.outputs.has_apk }}" != "true" ]; then add_file insta360-android.apk; fi
          FILES_TRIMMED=$(echo -e "$FILES" | sed '/^$/d')
          if [ -n "$FILES_TRIMMED" ]; then
            echo "files<<EOF" >> $GITHUB_OUTPUT
            echo -e "$FILES_TRIMMED" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "has_files=true" >> $GITHUB_OUTPUT
          else
            echo "has_files=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release (with assets)
        if: ${{ steps.artifacts.outputs.has_files == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.ref_name }}
          name: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.ref_name }}
          body_path: ${{ steps.notes.outputs.notes_path }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ${{ steps.artifacts.outputs.files }}
          allowUpdates: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release (no assets)
        if: ${{ steps.artifacts.outputs.has_files != 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.ref_name }}
          name: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.ref_name }}
          body_path: ${{ steps.notes.outputs.notes_path }}
          draft: false
          prerelease: false
          generate_release_notes: true
          allowUpdates: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}